# Application basics
    application.version=@project.version@
    application.name=@project.name@
    application.url=@application.url@
    baseUrl=@baseUrl@

    logging.level.root=INFO
    # logging.level.root=DEBUG

    #logging.level.com.vaadin.flow.spring=DEBUG
    #logging.level.org.springframework.context=DEBUG

# Security
    ## Define SSL and http ports
    server.port=@server.port@
    server.port.http=@server.port.http@
    server.ssl.enabled=@server.ssl.enabled@

    # The path to the keystore containing the certificate
    server.ssl.key-store=@server.ssl.key-store@
    # The format used for the keystore. It could be set to JKS in case it is a JKS file
    server.ssl.key-store-type=PKCS12

    # The alias mapped to the certificate
    server.ssl.key-alias=@server.ssl.key-alias@
    # The password used to generate the certificate
    server.ssl.key-store-password=@server.ssl.key-store-password@

    # Okta security

okta.oauth2.issuer=@okta.oauth2.issuer@

#    okta.oauth2.client-id=@okta.oauth2.client-id@
#    okta.oauth2.client-secret=@okta.oauth2.client-secret@

    okta_API_TOKEN=@okta_API_TOKEN@
    okta_OrgUrl=@okta_OrgUrl@
    okta_VFP-group=@okta_VFP-group@

# Vaadin
    # This is a workaround for https://github.com/vaadin/spring/issues/381
    spring.servlet.multipart.enabled=false

    # Application mapping - vaadin.urlMapping=/app/*
    vaadin.urlMapping=/
    # whitelist component scanning to address startup delay bug
    vaadin.whitelisted-packages=fusion/playground,com/joconner/i18n

    vaadin.productionMode=@productionMode@
    vaadin.compatibilityMode=false

    developmentMode=@developmentMode@

    system.environment=@system.environment@

# Development
    # Colored log output in IntelliJ IDEA
    spring.output.ansi.enabled=ALWAYS
    spring.jndi.ignore=true

# Database

# This should be turned on for the Heroku profile:
# spring.data.mongodb.uri=@spring.data.mongodb.uri@

# https://stackoverflow.com/questions/31568351/how-do-you-configure-embedded-mongdb-for-integration-testing-in-a-spring-boot-ap

# And turned off for local:
# spring.data.mongodb.uri=@spring.data.mongodb.uri@

#    spring.data.mongodb.host=@spring.data.mongodb.host@
#    spring.data.mongodb.port=@spring.data.mongodb.port@
#    spring.data.mongodb.authentication-database=@spring.data.mongodb.authentication-database@
#    spring.data.mongodb.username=@spring.data.mongodb.username@
#    spring.data.mongodb.password=@spring.data.mongodb.password@
#    spring.data.mongodb.database=@spring.data.mongodb.database@

#    spring.datasource.url=@spring.datasource.url@
#    spring.datasource.driverClassName=@spring.datasource.driverClassName@
#    spring.datasource.username=@spring.datasource.username@
#    spring.datasource.password=@spring.datasource.password@
#    spring.jpa.database-platform=@spring.jpa.database-platform@
#
#    spring.datasource.maxActive=@spring.datasource.maxActive@
#    spring.datasource.maxIdle=@spring.datasource.maxIdle@
#    spring.datasource.minIdle=@spring.datasource.minIdle@
#    spring.datasource.initialSize=@spring.datasource.initialSize@
#    spring.datasource.removeAbandoned=@spring.datasource.removeAbandoned@
#
#    spring.jpa.generate-ddl=@spring.jpa.generate-ddl@
#    spring.jpa.show-sql=@spring.jpa.show-sql@
#    spring.jpa.hibernate.ddl-auto=@spring.jpa.hibernate.ddl-auto@

#    #spring.h2.console.enabled=true
#    http://localhost/h2-console
#    # Enabling H2 Console (https://howtodoinjava.com/spring-boot2/h2-database-example/)
#    spring.h2.console.enabled=true

# --------------------------------------------------------
# Spring
    spring.application.admin.enabled=true
    spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.

    # To disable the error page
    server.error.whitelabel.enabled=false
    spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
    # https://www.baeldung.com/spring-boot-custom-error-page

# Disable mail check on local dev, since SMTP access to google mail is blocked
    management.health.mail.enabled=@management.health.mail.enabled@

# Mailing
    spring.mail.host=@spring.mail.host@
    spring.mail.port=@spring.mail.port@
    spring.mail.username=@spring.mail.username@
    spring.mail.password=@spring.mail.password@

    spring.mail.properties.mail.smtp.connectiontimeout=5000
    spring.mail.properties.mail.smtp.timeout=5000
    spring.mail.properties.mail.smtp.writetimeout=5000

    spring.mail.properties.mail.smtp.auth=@spring.mail.properties.mail.smtp.auth@
    spring.mail.properties.mail.smtp.starttls.enable=@spring.mail.properties.mail.smtp.starttls.enable@


# Actuator configuration
    management.endpoints.enabled-by-default=@management.endpoints.enabled-by-default@
    management.endpoint.info.enabled=@management.endpoint.info.enabled@

    management.endpoints.jmx.exposure.include=@management.endpoints.jmx.exposure.include@
    management.endpoints.jmx.exposure.exclude=@management.endpoints.jmx.exposure.exclude@

    management.endpoints.web.exposure.include=@management.endpoints.web.exposure.include@
    management.endpoints.web.exposure.exclude=@management.endpoints.web.exposure.exclude@

#    spring.boot.admin.client.url=http://localhost:8080
#    spring.boot.admin.client.username=admin
#    spring.boot.admin.client.password=1234
#    spring.security.user.name=client
#    spring.security.user.password=1234s
